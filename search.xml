<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/31/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>树莓派初步配置</title>
    <url>/2020/11/14/raspberry1/</url>
    <content><![CDATA[<p>需要的设备：<br>树莓派4B<br>鼠标（有线无线都可以）<br>键盘（有线无线都可以）<br>TF卡（尽量大于16GB）<br>TF卡读卡器<br>micro-HDMI视频线<br>5V 3A type-c电源线<br>支持HDMI输入的显示器（大部分电视都支持）</p>
<p>教程开始</p>
<a id="more"></a>

<h2 id="First"><a href="#First" class="headerlink" title="First"></a>First</h2><h3 id="下载系统镜像"><a href="#下载系统镜像" class="headerlink" title="下载系统镜像"></a>下载系统镜像</h3><p>如果你是一位新手，我十分建议你使用Raspberry官方基于Debian开发的Raspberry Pi OS，它理所应当是在树莓派上运行最稳定的系统</p>
<p><img src="/2020/11/14/raspberry1/1.png" alt="系统下载官网"></p>
<p>你会发现这里提供了三个镜像文件，我推荐使用第二个（Raspberry Pi OS with desktop）因为它既有令人熟悉的UI界面，又不失精简<br>请点击<a href="https://www.raspberrypi.org/software/operating-systems/">此处</a>前往下载</p>
<h3 id="烧录系统镜像"><a href="#烧录系统镜像" class="headerlink" title="烧录系统镜像"></a>烧录系统镜像</h3><p>我使用Raspberry官方推出的镜像烧录软件Raspberry Pi Imager<br>请点击合适的设备进行下载并安装<br><a href="https://downloads.raspberrypi.org/imager/imager_1.4.exe">Windows</a><br><a href="https://downloads.raspberrypi.org/imager/imager_1.4.dmg">Mac OS</a><br><a href="https://downloads.raspberrypi.org/imager/imager_1.4_amd64.deb">Ubuntu</a></p>
<p>安装完成后请先不要作任何的操作，请先找到刚刚下载的系统镜像，右击，使用Raspberry Pi Imager打开</p>
<p><img src="/2020/11/14/raspberry1/3.png" alt="选择打开方式"></p>
<p>这时你会发现在Operating System选项下已经变成了你刚刚下载好的系统镜像zip文件了，现在，你可以插上TF卡，并且在SD Card选项下选择你的TF卡储存设备，待准备就绪后，点击WRITE开始烧录</p>
<p><img src="/2020/11/14/raspberry1/4.png" alt="准备烧录"><br><img src="/2020/11/14/raspberry1/5.png" alt="正在烧录"></p>
<p>等待一会儿，出现下图时表示你已经烧录成功了</p>
<p><img src="/2020/11/14/raspberry1/6.png" alt="烧录成功"></p>
<p>现在你可以移除你的TF卡，并插入树莓派了</p>
<h2 id="Second"><a href="#Second" class="headerlink" title="Second"></a>Second</h2><h3 id="配置系统"><a href="#配置系统" class="headerlink" title="配置系统"></a>配置系统</h3><p>现在请将树莓派通过micro-HDMI视频线连接显示器，并接通电源，观察树莓派是否有红灯和绿灯亮起，如果有，则表示树莓派开始开机了，等待一会儿，你就能看见画面了</p>
<p><img src="/2020/11/14/raspberry1/8.jpg" alt="开机"></p>
<p>系统初始化设置很简单，按照你希望的方式进行设置，我相信你可以顺利的完成<br>不过，值得注意的是，我不建议你在配置的过程中连接网络，而是等进入桌面后再连接，因为Debian的软件包服务器在国外，我们需要先更改一下镜像源，然后进行系统更新，具体操作我后面会说</p>
<p>配置系统不需要花太多的时间，你应该已经可以进入桌面了，现在你可以连接你的网络了，点击右上角的信号图标，连接一个无线网络，或者你也可以直接使用网线连接</p>
<h3 id="远程连接桌面"><a href="#远程连接桌面" class="headerlink" title="远程连接桌面"></a>远程连接桌面</h3><p>我知道你不希望每天搬一个比树莓派还大很多的显示器吧，这已经失去了树派的初衷了，所以，现在我们来使用其它移动设备进行远程管理</p>
<p>首先，请点击左上角的树莓派图标，这有点类似与Windows的开始菜单，然后进行“首选项 &gt; Raspberry Pi Configuration &gt; Interfaces”，将SSH和VNC改成Enable，然后保存即可</p>
<p><img src="/2020/11/14/raspberry1/9.PNG" alt="SSH和VNC"></p>
<p>现在，你可以拿出一台移动设备，无论是平板，电脑还是手机都可以，然后前往<a href="https://www.realvnc.com/en/connect/download/viewer/">这里</a>下载并安装RealVNC</p>
<p><img src="/2020/11/14/raspberry1/11.png" alt="下载VNC"></p>
<p>打开后，你需要添加一个新的连接，下面我以Windows为例，其它设备也大同小异</p>
<p>首先在左上角进行“File &gt; New connection…”（IOS设备点击右上角的一个蓝色加号，Android设备点击右下角的一个绿色加号）</p>
<p><img src="/2020/11/14/raspberry1/12.png" alt="添加新连接"></p>
<p>在弹出的窗口中，在VNC Server一栏填入树莓派的IP地址</p>
<p><img src="/2020/11/14/raspberry1/13.png" alt="填入IP"></p>
<p>如果你不知到树莓派的IP地址，你可以在树莓派的系统中，将光标移到WIFI图标上，然后你就可以看到WIFI的名称和IP地址了，IP地址的形式往往是192.168.X(X).XXX</p>
<p><img src="/2020/11/14/raspberry1/10.png" alt="IP地址"></p>
<p>除此之外，你也可以前往路由器后台查看树莓派的IP地址，这里我就不多赘述</p>
<p>填写完成后，不需要更改其它设置，直接点击OK</p>
<p>不过，需要注意的是，对于触摸屏设备，我们需要将Interaction更改为Touch panel</p>
<p><img src="/2020/11/14/raspberry1/23.PNG" alt="interaction"></p>
<p>然后，你会发现主页上多出了一个客户机，双击它，弹出一个窗口让你填入用户名和密码<br>树莓派的默认用户名和密码分别是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pi</span><br><span class="line">raspberry</span><br></pre></td></tr></table></figure>
<p><img src="/2020/11/14/raspberry1/14.png" alt="用户名和密码"></p>
<p>确保无误后，勾选Remember password，点击OK，下次你就不需要输入密码了<br>现在你应该就能看到树莓派的桌面了</p>
<p><img src="/2020/11/14/raspberry1/15.png" alt="连接成功"></p>
<h3 id="修改分辨率"><a href="#修改分辨率" class="headerlink" title="修改分辨率"></a>修改分辨率</h3><p>现在，你已经可以远程连接树莓派了，但是你有可能会发现在你的手机，平板或者电脑上显示的分辨率并不适合，字体可能会特别小或者看不清，这时你需要修改树莓派的分辨率，使它适应你的移动显示器</p>
<p>首先，点击左上角树莓派图标，进行“首选项 &gt; Screen Configuration”，在弹出的窗口中进行“Configure &gt; Screens &gt; HDMI-1(有可能不一样，具体选择你接入显示器的端口名称）&gt; 分辨率”，然后选择一个合适的分辨率即可<br>选择完毕后点击窗口左上角的绿色对勾应用</p>
<p>注意，在每次更改前，建议使用Micro-HDMI视频线连接一个外接显示器，否则可能无法正常弹出设置窗口</p>
<p><img src="/2020/11/14/raspberry1/16.PNG" alt="开始设置分辨率"></p>
<p><img src="/2020/11/14/raspberry1/17.PNG" alt="继续设置分辨率"></p>
<h3 id="更改镜像源"><a href="#更改镜像源" class="headerlink" title="更改镜像源"></a>更改镜像源</h3><p>现在硬件上的设置已经完成了，我们来进行最后一步软件上的配置——更改镜像源，从而提高软件下载速度</p>
<p>首先打开终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>
<p>将里面的内容改成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi</span></span><br><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi</span><br><span class="line"><span class="comment"># Uncomment line below then &#x27;apt-get update&#x27; to enable &#x27;apt-get source&#x27;</span></span><br><span class="line"><span class="comment">#deb-src http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi</span></span><br><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi</span><br></pre></td></tr></table></figure>
<p>修改完成后“ctrl+o”&gt;“enter回车”&gt;“ctrl+x”保存并退出</p>
<p>我是使用清华大学镜像源，如果你是中国大陆用户，你可以直接复制上方内容，当然，你也可以自行选择一个离你最近的镜像站，你可以前往<a href="http://www.raspbian.org/RaspbianMirrors/">这里</a>查看所有镜像的列表</p>
<p>选择好服务器后，将</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi</span><br></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb-src https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi</span><br></pre></td></tr></table></figure>
<p>中的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">https://mirrors.tuna.tsinghua.edu.cn/raspbian/raspbian/</span><br></pre></td></tr></table></figure>
<p>改成你选择的服务器地址即可</p>
<p><img src="/2020/11/14/raspberry1/18.png" alt="更改第一个配置文件"></p>
<p>然后继续在终端里输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list.d/raspi.list</span><br></pre></td></tr></table></figure>
<p>将里面的内容改成</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deb http://archive.raspberrypi.org/debian/ buster main</span></span><br><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main</span><br><span class="line"><span class="comment"># Uncomment line below then &#x27;apt-get update&#x27; to enable &#x27;apt-get source&#x27;</span></span><br><span class="line"><span class="comment">#deb-src http://archive.raspberrypi.org/debian/ buster main</span></span><br></pre></td></tr></table></figure>

<p>与之前的一样，你可以直接复制我上方的内容，也可以自己从镜像列表里选择一个离你最近的一个服务器，将</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deb http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/ buster main</span><br></pre></td></tr></table></figure>
<p>中的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://mirrors.tuna.tsinghua.edu.cn/raspberrypi/</span><br></pre></td></tr></table></figure>
<p>改成你选择的服务器地址即可</p>
<p><img src="/2020/11/14/raspberry1/19.png" alt="更改第二个配置文件"></p>
<p>当上面两个配置文件都修改完成后，我们只需要更新一下本地缓存即可</p>
<p>在终端中输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>回车，等待完成</p>
<p><img src="/2020/11/14/raspberry1/20.png" alt="update"></p>
<p>然后继续在终端输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<p>回车，等待完成即可</p>
<p><img src="/2020/11/14/raspberry1/21.png" alt="upgrade"></p>
<h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>@记，博客感想</p>
<p>呼~终于结束了…等等！真的结束了吗？</p>
<p>不！你的树莓派之旅才刚刚开始！</p>
<p>我很高兴你能看到这里，</p>
<p>也很希望这篇文章能成为你进入派世界的一把钥匙，</p>
<p>我和你一样，</p>
<p>一个小白，</p>
<p>比漂白剂还白，</p>
<p>对派世界一无所知，</p>
<p>但又充满向往，</p>
<p>我在迷雾中寻找前进的方向，</p>
<p>这条路坎坷不平，</p>
<p>但幸好，</p>
<p>有前者默默作下了记号，</p>
<p>感谢他们给我的指导，</p>
<p>让我走得顺利不少，</p>
<p>当然，</p>
<p>这里不免还有一些遗漏的地方，</p>
<p>有大有小，</p>
<p>那么现在，</p>
<p>就让我，</p>
<p>还有屏幕前的你们，</p>
<p>一起将这些遗漏的地方补好，</p>
<p>派世界，</p>
<p>由我们一起打造！</p>
]]></content>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>使用树莓派搭建一个个人广播站</title>
    <url>/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/</url>
    <content><![CDATA[<h1 id="请遵循中华人民共和国无线电管理条例！"><a href="#请遵循中华人民共和国无线电管理条例！" class="headerlink" title="请遵循中华人民共和国无线电管理条例！"></a>请遵循中华人民共和国无线电管理条例！</h1><p>需要的设备：<br>树莓派4B<br>杜邦线<br>电脑</p>
<p>教程开始</p>
<a id="more"></a>

<h2 id="First"><a href="#First" class="headerlink" title="First"></a>First</h2><h3 id="克隆GitHub上的项目"><a href="#克隆GitHub上的项目" class="headerlink" title="克隆GitHub上的项目"></a>克隆GitHub上的项目</h3><p>首先打开终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>

<p>要记住，在所有项目开始之前，你都需要更新软件仓库</p>
<p>更新完成后，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/1.png" alt="安装git可以帮助你从GitHub上克隆文件"></p>
<p>现在，在终端里输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/F5OEO/rpitx</span><br></pre></td></tr></table></figure>

<p>开始克隆rpitx项目</p>
<p>​    <em>rpitx项目可以让树莓派发射从5 KHz到1500 MHz之间的广播信号，从而搭建一个私人广播站</em><br>开发者的介绍<br>​    <em>rpitx is a general radio frequency transmitter for Raspberry Pi which doesn’t require any other hardware unless filter to avoid intererence. It can handle frequencies from 5 KHz up to 1500 MHz.</em></p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/2.png" alt="克隆文件到本地"></p>
<p>由于GitHub服务器在国外，所以克隆时间会比较长，耐心等待即可，如果卡住可以试试”Ctrl+C”终止然后重新克隆</p>
<p>克隆完成后，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> rpitx</span><br></pre></td></tr></table></figure>

<p>将终端目录转至rpitx</p>
<p>然后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br></pre></td></tr></table></figure>

<p>运行自动安装脚本<br>该安装过程依旧需要连接国外服务器，时间可能会比较长，请耐心等待</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/4.png" alt="完成安装过程"></p>
<p>在安装最后，会提示是否允许修改 /boot/config.txt，输入”y”并回车即可</p>
<p>现在已经安装完成了，最后输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>

<p>进行重启</p>
<h2 id="Second"><a href="#Second" class="headerlink" title="Second"></a>Second</h2><h3 id="向世界发声"><a href="#向世界发声" class="headerlink" title="向世界发声"></a>向世界发声</h3><p>激动人心的时刻到了，让我们来测试一下树莓派是否可以发射广播信号</p>
<p>打开终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> rpitx</span><br></pre></td></tr></table></figure>

<p>让终端在 /rpitx 目录下运行，这个目录包含树莓派发射广播信号的所有文件</p>
<p>然后继续输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./easytest.sh</span><br></pre></td></tr></table></figure>

<p>这是作者提供的一个测试脚本，输入后，你的终端应该会出现下图样式</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/5.png" alt="测试界面"></p>
<p>由于434 MHz不是一个标准的FM频率，即使我们可以通过其他方式来接收，但本教程主要针对FM广播的发射，所以我们可以更改这个数值，比如85，只要不要占用当地已有的广播频率即可</p>
<p>输入频率后回车，我们会进入一个新的页面，请用方向键将光标移动到第四项，FmRds</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/6.png" alt="选择FmRds"></p>
<p>选中后回车，你会看到如下界面</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/7.png" alt="开始发射"></p>
<p>现在，就拿出你的收音机，调到你刚刚设定的频率，然后靠近树莓派，仔细听，是不是有声音了，如果有，那么恭喜你，你已经成功配置好了你的树莓派，可以正常播音了！</p>
<p>你现在是不是发现，树莓派发出的信号特别的小，稍微离远一点就收不到信号了？现在，请拿出一根杜邦线，插在树莓派的GPIO 4引脚（图中7号引脚）</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/8.png" alt="引脚参照表"></p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/9.jpg" alt="实拍图"></p>
<p>好了，听听看，是不是信号好了很多？在家里逛一圈，是不是基本上都能听到声音啦！</p>
<p>但是，现在树莓派一直在播送测试音频，那么我们应该怎样播放自己想要的声音呢，现在，请向树莓派内导入一段.wav格式的音频，将其放在 /home/pi/rpitx 目录下，然后在当前文件夹下运行终端，怎样在当前目录运行终端？请在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> rpitx</span><br></pre></td></tr></table></figure>

<p>一定要记住了！之后的大部分命令都需要在当前目录下运行！后面我就不再重复说明了</p>
<p>现在请按照以下模板输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./pifmrds -freq [frequency] -audio [filename.wav]</span><br></pre></td></tr></table></figure>

<p>比如，我想在85 MHz播送名为q.wav的音频文件，那么我应该输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./pifmrds -freq 85 -audio q.wav</span><br></pre></td></tr></table></figure>

<p>当你在终端最后一行看到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Starting to transmit on XX MHz.（XX表明你使用的频率）</span><br></pre></td></tr></table></figure>

<p>表明树莓派已经开始进行广播了，你可以使用收音机去接收了</p>
<h3 id="一个小问题"><a href="#一个小问题" class="headerlink" title="一个小问题"></a>一个小问题</h3><p>如果你想播送的音频不是.wav格式该怎么办呢？我为你提供两种解决方法</p>
<h4 id="方法一（不推荐）"><a href="#方法一（不推荐）" class="headerlink" title="方法一（不推荐）"></a>方法一（不推荐）</h4><p>使用格式转换工具（方便，但不是一个长久的方法，同时接下来的功能都将无法使用）<br>无论是在线还是软件都可以，在网络上搜索音频转换就会有一大堆工具，选择一个有缘的用就好，只要保证最后的格式是.wav即可</p>
<h4 id="方法二（推荐）"><a href="#方法二（推荐）" class="headerlink" title="方法二（推荐）"></a>方法二（推荐）</h4><p>使用SoX工具（需要额外安装且命令语法较为复杂，但是无需单独转换文件，可以直接在树莓派上播送，应用范围广）<br>在树莓派终端中输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install sox libsox-fmt-all</span><br></pre></td></tr></table></figure>

<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/10.png" alt="安装SoX"></p>
<p>现在，在 /rpitx 目录下运行终端，输入以下模板</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sox -t [format] [filename.format] -t wav -  | sudo ./pifmrds -freq XX -audio -</span><br></pre></td></tr></table></figure>

<p>比如，我想在85 MHz频率上播放1.mp3文件，那么我应该输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sox -t mp3 1.mp3 -t wav -  | sudo ./pifmrds -freq 85 -audio -</span><br></pre></td></tr></table></figure>

<p>非常建议你复制上面这串命令然后修改[ ]内的内容而不是手打，因为这非常容易输错！</p>
<p>正常情况下，你的音频可以正常播送，如果失败可能是原格式不支持，SoX目前支持的格式有：AU, WAV, AIFF, MP3 , Ogg Vorbis, FLAC</p>
<h3 id="自动播放多个音频"><a href="#自动播放多个音频" class="headerlink" title="自动播放多个音频"></a>自动播放多个音频</h3><p>我们已经实现通过树莓派发射音频信号了，但是你会发现它一直在循环播放同一个音频，这未免有些感到枯燥，所以现在我们可以通过编写一个简单的脚本实现多音频连续播放</p>
<p>首先我们到 /rpitx 目录下新建一个文件夹，在 /rpitx 目录下运行终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir [foldername]</span><br></pre></td></tr></table></figure>

<p>比如我要创建一个名为“playlist”的文件夹，那么我应该输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir playlist</span><br></pre></td></tr></table></figure>

<p>创建完成后，我们需要将 /rpitx 目录下的“pifmrds”文件复制到刚刚创建的文件夹内，在终端内输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp pifmrds [foldername]&#x2F;</span><br></pre></td></tr></table></figure>

<p>比如我要将其复制到名为“playlist”的文件夹内，那么我应该输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp pifmrds playlist/</span><br></pre></td></tr></table></figure>

<p>注意，文件夹名称最后的“/”一定不能忘记了</p>
<p>现在，在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [foldername]</span><br></pre></td></tr></table></figure>

<p>在新的文件夹内运行终端</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/11.png" alt="一波操作"></p>
<p>接下来，我们需要编写一个脚本了，在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nano batch_fm.sh</span><br></pre></td></tr></table></figure>

<p>输入后你会进入一个黑色界面，这是一个文本编辑器，上一篇博客我们也使用过它</p>
<p>现在，你需要在这里输入下面这串代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">trap</span> ctrl_c SIGINT      <span class="comment">#获取ctrl+c的键盘输入信号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">ctrl_c</span></span>() &#123;     <span class="comment">#设定ctrl+c的功能为退出程序</span></span><br><span class="line">	<span class="built_in">exit</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="keyword">for</span> f <span class="keyword">in</span> *.mp3  <span class="comment">#获取所有以.mp3为格式的音频文件</span></span><br><span class="line">			<span class="keyword">do</span> sox -t mp3 <span class="string">&quot;<span class="variable">$f</span>&quot;</span> -t wav - | sudo ./pifmrds -freq 85 -audio -  <span class="comment">#在85MHz频率播送</span></span><br><span class="line">		<span class="keyword">done</span></span><br><span class="line">	<span class="keyword">done</span>    <span class="comment">#完成循环</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果你使用的是.wav文件，则将代码中所有.mp3改为.wav即可<br><em>值得注意的是，在该文件夹内的所有音频文件格式都需要与代码中的格式相同，对于上面给出的例子来说，树莓派将会播放所有.mp3格式的音频文件，对于格式不同的音频文件，树莓派将不会播放</em></p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/12.png" alt="编写脚本"></p>
<p>输入完成后，请依此按下“Ctrl+O” &gt; “回车” &gt; “Ctrl+X”，保存并退出</p>
<p>最后，我们需要为“batch_fm.sh”文件分配权限，在终端内输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 755 batch_fm.sh</span><br></pre></td></tr></table></figure>

<p>755权限<br><em>第一位7，代表文件所有者拥有的权限为可读（4）+可写（2）+可执行（1）</em><br><em>第二位5，代表文件所有者同组用户的权限为可读（4）+不可写（0）+可执行（1）</em><br><em>第三位5，代表公共用户的权限为可读（4）+不可写（0）+可执行（1）</em></p>
<p>现在，导入一些相同格式的音频文件到 /home/pi/rpitx/[playlist] 目录下（你需要将[playlist]更改为你所创建的文件夹名称），然后在当前目录下运行终端，输入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./batch_fm.sh</span><br></pre></td></tr></table></figure>

<p>当你看到终端最后一行显示“Starting to transmit on XX MHz”时，你就可以使用收音机去收听了！</p>
<p><img src="/2021/02/17/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E4%B8%AA%E4%BA%BA%E5%B9%BF%E6%92%AD%E7%AB%99/13.png" alt="开始播送"></p>
<h2 id="告一段落"><a href="#告一段落" class="headerlink" title="告一段落"></a>告一段落</h2><p>本期教程到这里就结束了，但是这只是最最基础的一些功能，下期教程，我将教大家如何实时播送电脑的声音以及自己的声音，让你成为一名真正的DJ！敬请期待吧！</p>
<p>目前学业繁忙，更新不会太快，非常抱歉，呜呜~</p>
]]></content>
      <tags>
        <tag>RaspberryPi</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/2020/10/31/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>hi，你好，这是我的第一篇博客，很高兴能认识你！</p>
]]></content>
  </entry>
</search>
